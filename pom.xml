<project>
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.iuliandogariu.linguist</groupId>
    <artifactId>springmvc-linguist</artifactId>
    <version>0.1.0</version>
    <packaging>war</packaging>
    <properties>
        <java-version>1.8</java-version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>4.3.5.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.3.2</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>4.1</version>
        </dependency>

        <!-- Validation -->

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>5.3.4.Final</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.el</artifactId>
            <version>3.0.0</version>
            <scope>test</scope>
        </dependency>

        <!-- JSON to Java bindings -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.8.5</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.8.5</version>
        </dependency>

        <!-- Test framework -->

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.9.5</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Copied pasted and adapted from https://tomcat.apache.org/maven-plugin-2.2/run-mojo-features.html -->
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <!-- http port -->
                    <port>9090</port>
                    <!-- application path always starts with /-->
                    <path>/</path>
                    <!-- optional path to a context file -->
                    <!--<contextFile>${tomcatContextXml}</contextFile>-->
                    <!-- optional system propoerties you want to add
                    <systemProperties>
                        <appserver.base>${project.build.directory}/appserver-base</appserver.base>
                        <appserver.home>${project.build.directory}/appserver-home</appserver.home>
                        <derby.system.home>${project.build.directory}/appserver-base/logs</derby.system.home>
                        <java.io.tmpdir>${project.build.directory}</java.io.tmpdir>
                    </systemProperties> -->
                    <!-- if you want to use test dependencies rather than only runtime -->
                    <!--<useTestClasspath>false</useTestClasspath>-->
                    <!-- optional if you want to add some extra directories into the classloader -->
                    <!--<additionalClasspathDirs>
                        <additionalClasspathDir></additionalClasspathDir>
                    </additionalClasspathDirs>-->
                </configuration>
                <!-- For any extra dependencies needed when running embedded Tomcat (not WAR dependencies) add them below
                <dependencies>
                <dependency>
                    <groupId>org.apache.derby</groupId>
                    <artifactId>derby</artifactId>
                    <version>\${derbyVersion}</version>
                </dependency>
                <dependency>
                    <groupId>javax.mail</groupId>
                    <artifactId>mail</artifactId>
                    <version>1.4</version>
                </dependency>
                </dependencies>-->
            </plugin>
        </plugins>
    </build>
</project>
